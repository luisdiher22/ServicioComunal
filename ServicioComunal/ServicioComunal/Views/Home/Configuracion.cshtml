@using System.Linq
@using ServicioComunal.Models
@{
    ViewData["Title"] = "Configuración";
    Layout = "_Layout";
}

<div class="dashboard-content">
    <div class="content-header">
        <h1>Configuración del Sistema</h1>
        <p>Gestionar configuraciones, formularios y entregas</p>
    </div>

    <!-- Tiles de Configuración Principal -->
    <div class="dashboard-cards">
        <!-- Tile: Operaciones de Sistema -->
        <div class="dashboard-card danger-tile">
            <div class="card-icon danger">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
            <div class="card-content">
                <h3>Operaciones Críticas</h3>
                <p>Operaciones que requieren máxima precaución</p>
            </div>
            <div class="card-stats">
                <div class="config-setting">
                    <button class="btn btn-danger" onclick="confirmarEliminacionTotal()">
                        <i class="fas fa-trash-alt"></i> Eliminar Todos los Estudiantes
                    </button>
                    <small class="text-muted d-block mt-2">
                        Elimina TODOS los estudiantes, usuarios de estudiantes y grupos del sistema
                    </small>
                </div>
            </div>
        </div>
    </div>
</div>

    <!-- Secciones Expandibles de Configuración -->
    <div class="expandable-sections mt-4">
        <!-- Sección Expandible: Formularios -->
        <div class="expandable-section" id="seccionFormularios" style="display: none;">
        <div class="section-header">
            <h3><i class="fas fa-file-alt"></i> Gestión de Formularios</h3>
            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="ocultarSeccion('seccionFormularios')">
                <i class="fas fa-times"></i> Cerrar
            </button>
        </div>
        <div class="section-content">
            <div class="table-responsive">
                <table class="table config-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Descripción</th>
                            <th>Fecha Ingreso</th>
                            <th>Profesor</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.Formularios != null)
                        {
                            @foreach (var formulario in ViewBag.Formularios)
                            {
                                <tr>
                                    <td><span class="badge badge-secondary">@formulario.Identificacion</span></td>
                                    <td><strong>@formulario.Nombre</strong></td>
                                    <td class="text-truncate">@formulario.Descripcion</td>
                                    <td>@formulario.FechaIngreso.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        @if (formulario.Profesor != null)
                                        {
                                            <div class="profesor-info">
                                                <i class="fas fa-user"></i>
                                                @formulario.Profesor.Nombre @formulario.Profesor.Apellidos
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Sin asignar</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="editarFormulario(@formulario.Identificacion)">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="eliminarFormulario(@formulario.Identificacion)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        @if (ViewBag.Formularios == null || ((IList<Formulario>)ViewBag.Formularios).Count == 0)
                        {
                            <tr>
                                <td colspan="6" class="text-center text-muted py-4">
                                    <i class="fas fa-inbox fa-2x mb-2"></i><br>
                                    No hay formularios registrados
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Sección Expandible: Entregas -->
    <div class="expandable-section" id="seccionEntregas" style="display: none;">
        <div class="section-header">
            <h3><i class="fas fa-upload"></i> Gestión de Entregas</h3>
            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="ocultarSeccion('seccionEntregas')">
                <i class="fas fa-times"></i> Cerrar
            </button>
        </div>
        <div class="section-content">
            <div class="table-responsive">
                <table class="table config-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Descripción</th>
                            <th>Fecha Límite</th>
                            <th>Grupo</th>
                            <th>Profesor</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.Entregas != null)
                        {
                            @foreach (var entrega in ViewBag.Entregas)
                            {
                                <tr>
                                    <td><span class="badge badge-secondary">@entrega.Identificacion</span></td>
                                    <td><strong>@entrega.Nombre</strong></td>
                                    <td class="text-truncate">@entrega.Descripcion</td>
                                    <td>
                                        @{
                                            var esVencida = entrega.FechaLimite < DateTime.Now;
                                            var esProxima = entrega.FechaLimite <= DateTime.Now.AddDays(7) && entrega.FechaLimite >= DateTime.Now;
                                        }
                                        <span class="badge @(esVencida ? "badge-danger" : esProxima ? "badge-warning" : "badge-success")">
                                            @entrega.FechaLimite.ToString("dd/MM/yyyy")
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge badge-primary">Grupo @entrega.GrupoNumero</span>
                                    </td>
                                    <td>
                                        @if (entrega.Profesor != null)
                                        {
                                            <div class="profesor-info">
                                                <i class="fas fa-user"></i>
                                                @entrega.Profesor.Nombre @entrega.Profesor.Apellidos
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Sin asignar</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="editarEntrega(@entrega.Identificacion)">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="eliminarEntrega(@entrega.Identificacion)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        @if (ViewBag.Entregas == null || ((IList<Entrega>)ViewBag.Entregas).Count == 0)
                        {
                            <tr>
                                <td colspan="7" class="text-center text-muted py-4">
                                    <i class="fas fa-inbox fa-2x mb-2"></i><br>
                                    No hay entregas programadas
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Formularios -->
<div class="modal fade" id="modalFormulario" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalFormularioTitulo">Nuevo Formulario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="formFormulario">
                    <input type="hidden" id="formularioId" value="0">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Nombre del Formulario</label>
                                <input type="text" class="form-control" id="formularioNombre" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Profesor Asignado</label>
                                <select class="form-select" id="formularioProfesor">
                                    <option value="">Seleccionar profesor</option>
                                    @if (ViewBag.Profesores != null)
                                    {
                                        @foreach (var profesor in ViewBag.Profesores)
                                        {
                                            <option value="@profesor.Identificacion">@profesor.Nombre @profesor.Apellidos</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control" id="formularioDescripcion" rows="3" required></textarea>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Ruta del Archivo (opcional)</label>
                        <input type="text" class="form-control" id="formularioArchivo" placeholder="Ej: /uploads/formulario.pdf">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="guardarFormulario()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Entregas -->
<div class="modal fade" id="modalEntrega" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalEntregaTitulo">Nueva Entrega</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    <strong>Información:</strong> Al crear una nueva entrega, se generará automáticamente una tarea para cada grupo existente. 
                    Los profesores evaluadores se asignarán según el tutor de cada grupo.
                </div>
                <form id="formEntrega">
                    <input type="hidden" id="entregaId" value="0">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Nombre de la Entrega *</label>
                                <input type="text" class="form-control" id="entregaNombre" required>
                                <div class="invalid-feedback">
                                    Por favor ingrese el nombre de la entrega.
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Fecha Límite *</label>
                                <input type="date" class="form-control" id="entregaFechaLimite" required>
                                <div class="invalid-feedback">
                                    Por favor seleccione la fecha límite.
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Descripción *</label>
                        <textarea class="form-control" id="entregaDescripcion" rows="4" required 
                                  placeholder="Describa los objetivos y requisitos de esta entrega..."></textarea>
                        <div class="invalid-feedback">
                            Por favor ingrese la descripción de la entrega.
                        </div>
                    </div>
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Nota:</strong> Los archivos se cargarán posteriormente en la gestión de entregas, 
                        y la retroalimentación será proporcionada por cada tutor.
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancelar
                </button>
                <button type="button" class="btn btn-primary" onclick="guardarEntrega()">
                    <i class="fas fa-save me-2"></i>Crear Entrega para Todos los Grupos
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/configuracion.js"></script>
    
    <style>
        .danger-tile {
            border-left: 4px solid #dc3545 !important;
        }
        
        .danger-tile .card-icon.danger {
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
        }
        
        .danger-tile:hover {
            border-left-color: #bd2130 !important;
            box-shadow: 0 4px 15px rgba(220, 53, 69, 0.2);
        }
    </style>
    
    <script>
        function confirmarEliminacionTotal() {
            console.log('🗑️ Función confirmarEliminacionTotal llamada');
            
            Swal.fire({
                title: '⚠️ PELIGRO: Eliminación Total',
                html: `
                    <div style="text-align: left;">
                        <p><strong>Esta operación eliminará PERMANENTEMENTE:</strong></p>
                        <ul style="margin: 10px 0;">
                            <li>Todos los estudiantes registrados</li>
                            <li>Todos los usuarios de estudiantes</li>
                            <li>Todos los grupos formados</li>
                            <li>Todas las relaciones estudiante-grupo</li>
                        </ul>
                        <p class="text-danger"><strong>¡Esta acción NO se puede deshacer!</strong></p>
                        <p>Para continuar, escriba exactamente: <code>ELIMINAR TODO</code></p>
                        <input type="text" id="confirmacionTexto" class="form-control mt-2" placeholder="Escriba aquí...">
                    </div>
                `,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Continuar con Eliminación',
                cancelButtonText: 'Cancelar Operación',
                allowOutsideClick: false,
                allowEscapeKey: false,
                preConfirm: () => {
                    const confirmText = document.getElementById('confirmacionTexto').value;
                    if (confirmText !== 'ELIMINAR TODO') {
                        Swal.showValidationMessage('Debe escribir exactamente: ELIMINAR TODO');
                        return false;
                    }
                    return true;
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    segundaConfirmacion();
                }
            });
        }
        
        function segundaConfirmacion() {
            Swal.fire({
                title: '🛑 ÚLTIMA CONFIRMACIÓN',
                text: '¿Está ABSOLUTAMENTE SEGURO de que desea eliminar TODOS los datos de estudiantes? Esta acción es IRREVERSIBLE.',
                icon: 'error',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'SÍ, ELIMINAR TODO',
                cancelButtonText: 'NO, Cancelar',
                allowOutsideClick: false,
                allowEscapeKey: false
            }).then((result) => {
                if (result.isConfirmed) {
                    ejecutarEliminacionTotal();
                }
            });
        }
        
        function ejecutarEliminacionTotal() {
            // Mostrar progreso
            Swal.fire({
                title: 'Eliminando datos...',
                html: 'Por favor espere, esta operación puede tardar varios minutos.',
                allowOutsideClick: false,
                allowEscapeKey: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
            
            fetch('@Url.Action("EliminarTodosLosEstudiantes", "Home")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Eliminación Completada',
                        html: `
                            <div style="text-align: left;">
                                <p><strong>Datos eliminados exitosamente:</strong></p>
                                <ul>
                                    <li>Estudiantes eliminados: ${result.estudiantesEliminados || 0}</li>
                                    <li>Usuarios eliminados: ${result.usuariosEliminados || 0}</li>
                                    <li>Grupos eliminados: ${result.gruposEliminados || 0}</li>
                                </ul>
                                <p class="text-success">El sistema ha sido reiniciado correctamente.</p>
                            </div>
                        `,
                        confirmButtonText: 'Entendido'
                    }).then(() => {
                        // Recargar la página para reflejar los cambios
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error en la Eliminación',
                        text: result.message || 'Ocurrió un error durante la eliminación de datos.',
                        confirmButtonText: 'Entendido'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error de Conexión',
                    text: 'No se pudo completar la operación. Verifique la conexión.',
                    confirmButtonText: 'Entendido'
                });
            });
        }
    </script>
}
