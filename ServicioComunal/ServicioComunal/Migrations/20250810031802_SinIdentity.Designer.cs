// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicioComunal.Data;

#nullable disable

namespace ServicioComunal.Migrations
{
    [DbContext(typeof(ServicioComunalDbContext))]
    [Migration("20250810031802_SinIdentity")]
    partial class SinIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServicioComunal.Models.Entrega", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Identificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"));

                    b.Property<string>("ArchivoRuta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ArchivoRuta");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripcion");

                    b.Property<DateTime>("FechaLimite")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaLimite");

                    b.Property<DateTime>("FechaRetroalimentacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRetroalimentacion");

                    b.Property<int>("GrupoNumero")
                        .HasColumnType("int")
                        .HasColumnName("GRUPO_Numero");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<int>("ProfesorIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("PROFESOR_Identificacion");

                    b.Property<string>("Retroalimentacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Retroalimentacion");

                    b.HasKey("Identificacion");

                    b.HasIndex("GrupoNumero");

                    b.HasIndex("ProfesorIdentificacion");

                    b.ToTable("ENTREGA");
                });

            modelBuilder.Entity("ServicioComunal.Models.Estudiante", b =>
                {
                    b.Property<int>("Identificacion")
                        .HasColumnType("int")
                        .HasColumnName("Identificacion");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Apellidos");

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Clase");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.HasKey("Identificacion");

                    b.ToTable("ESTUDIANTE");
                });

            modelBuilder.Entity("ServicioComunal.Models.Formulario", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Identificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"));

                    b.Property<string>("ArchivoRuta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ArchivoRuta");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripcion");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaIngreso");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<int>("ProfesorIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("PROFESOR_Identificacion");

                    b.HasKey("Identificacion");

                    b.HasIndex("ProfesorIdentificacion");

                    b.ToTable("FORMULARIO");
                });

            modelBuilder.Entity("ServicioComunal.Models.Grupo", b =>
                {
                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("Numero");

                    b.HasKey("Numero");

                    b.ToTable("GRUPO");
                });

            modelBuilder.Entity("ServicioComunal.Models.GrupoEstudiante", b =>
                {
                    b.Property<int>("EstudianteIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("ESTUDIANTE_Identificacion")
                        .HasColumnOrder(0);

                    b.Property<int>("GrupoNumero")
                        .HasColumnType("int")
                        .HasColumnName("GRUPO_Numero")
                        .HasColumnOrder(1);

                    b.Property<int>("ProfesorIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("PROFESOR_Identificacion");

                    b.HasKey("EstudianteIdentificacion", "GrupoNumero");

                    b.HasIndex("GrupoNumero");

                    b.HasIndex("ProfesorIdentificacion");

                    b.ToTable("GRUPO_ESTUDIANTE");
                });

            modelBuilder.Entity("ServicioComunal.Models.Notificacion", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Identificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaHora");

                    b.Property<int>("GrupoNumero")
                        .HasColumnType("int")
                        .HasColumnName("GRUPO_Numero");

                    b.Property<bool>("Leido")
                        .HasColumnType("bit")
                        .HasColumnName("Leido");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mensaje");

                    b.Property<int>("ProfesorIdentificacion")
                        .HasColumnType("int")
                        .HasColumnName("PROFESOR_Identificacion");

                    b.HasKey("Identificacion");

                    b.HasIndex("GrupoNumero");

                    b.HasIndex("ProfesorIdentificacion");

                    b.ToTable("NOTIFICACION");
                });

            modelBuilder.Entity("ServicioComunal.Models.Profesor", b =>
                {
                    b.Property<int>("Identificacion")
                        .HasColumnType("int")
                        .HasColumnName("Identificacion");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Apellidos");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rol");

                    b.HasKey("Identificacion");

                    b.ToTable("PROFESOR");
                });

            modelBuilder.Entity("ServicioComunal.Models.Usuario", b =>
                {
                    b.Property<int>("Identificacion")
                        .HasColumnType("int")
                        .HasColumnName("Identificacion");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("Activo");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Contraseña");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCreacion");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Usuario");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Rol");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime2")
                        .HasColumnName("UltimoAcceso");

                    b.HasKey("Identificacion");

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("ServicioComunal.Models.Entrega", b =>
                {
                    b.HasOne("ServicioComunal.Models.Grupo", "Grupo")
                        .WithMany("Entregas")
                        .HasForeignKey("GrupoNumero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServicioComunal.Models.Profesor", "Profesor")
                        .WithMany("Entregas")
                        .HasForeignKey("ProfesorIdentificacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("ServicioComunal.Models.Formulario", b =>
                {
                    b.HasOne("ServicioComunal.Models.Profesor", "Profesor")
                        .WithMany("Formularios")
                        .HasForeignKey("ProfesorIdentificacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("ServicioComunal.Models.GrupoEstudiante", b =>
                {
                    b.HasOne("ServicioComunal.Models.Estudiante", "Estudiante")
                        .WithMany("GruposEstudiantes")
                        .HasForeignKey("EstudianteIdentificacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServicioComunal.Models.Grupo", "Grupo")
                        .WithMany("GruposEstudiantes")
                        .HasForeignKey("GrupoNumero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServicioComunal.Models.Profesor", "Profesor")
                        .WithMany("GruposEstudiantes")
                        .HasForeignKey("ProfesorIdentificacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Grupo");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("ServicioComunal.Models.Notificacion", b =>
                {
                    b.HasOne("ServicioComunal.Models.Grupo", "Grupo")
                        .WithMany("Notificaciones")
                        .HasForeignKey("GrupoNumero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServicioComunal.Models.Profesor", "Profesor")
                        .WithMany("Notificaciones")
                        .HasForeignKey("ProfesorIdentificacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("ServicioComunal.Models.Usuario", b =>
                {
                    b.HasOne("ServicioComunal.Models.Estudiante", "Estudiante")
                        .WithOne("Usuario")
                        .HasForeignKey("ServicioComunal.Models.Usuario", "Identificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServicioComunal.Models.Profesor", "Profesor")
                        .WithOne("Usuario")
                        .HasForeignKey("ServicioComunal.Models.Usuario", "Identificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("ServicioComunal.Models.Estudiante", b =>
                {
                    b.Navigation("GruposEstudiantes");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ServicioComunal.Models.Grupo", b =>
                {
                    b.Navigation("Entregas");

                    b.Navigation("GruposEstudiantes");

                    b.Navigation("Notificaciones");
                });

            modelBuilder.Entity("ServicioComunal.Models.Profesor", b =>
                {
                    b.Navigation("Entregas");

                    b.Navigation("Formularios");

                    b.Navigation("GruposEstudiantes");

                    b.Navigation("Notificaciones");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
